/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


/ {
    behaviors {
        td_paren: tap_dance_parenthesis {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_PARENTHESIS";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        td_bracket: tap_dance_bracket {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_BRACKET";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        td_brace: tap_dance_brace {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_BRACE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACE>, <&kp RIGHT_BRACE>;
        };
    };

    combos {
        compatible = "zmk,combos";
        
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        
        combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };
        
        combo_backspace {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp BACKSPACE>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        // TODO: refactor left_layer (much of this is in right_layer)
        // TODO: homerow mods on additional layers
        // TODO: better for layer control ergonomics (i.e. &mo -> {&sl, &to, &tog})
        // TODO: mod to access control layer

        compatible = "zmk,keymap";
                
        default_layer {
            bindings = <
                &kp      Q &kp      W &kp       F &kp       P &kp  B      &kp J     &kp       L &kp U       &kp      Y &kp SEMICOLON 
                &mt LGUI A &mt LALT R &mt LCTRL S &mt LSHFT T &kp  G      &kp M     &mt RSHFT N &mt RCTRL E &mt LALT I &mt RGUI O
                &kp      Z &kp      X &kp       C &kp       D &kp  V      &kp K     &kp       H &kp COMMA   &kp    DOT &kp RETURN
                                                  &mo 1       &tog 4      &kp SPACE &mo 2
            >;
        };


        left_layer {
            bindings = <
            &kp N1      &kp N2      &kp N3      &kp N4      &kp N5          &kp N6      &kp N7          &kp N8          &kp N9      &kp N0 
            &kp TAB     &kp LC(S)   &kp DQT     &kp PIPE2   &kp HASH        &kp MINUS   &kp EQUAL       &kp LBKT        &kp RBKT    &kp DEL 
            &kp ESC     &kp TILDE   &kp BSLH    &kp HASH    &kp TILDE2      &kp MINUS   &kp GRAVE       &kp LBKT        &kp RBKT    &kp SLASH 
                                                &trans      &kp LGUI        &kp RGUI    &trans
            >;
        };
        
        right_layer {
            bindings = <
            &kp EXCL    &kp AT      &kp HASH    &kp DLLR    &kp PRCNT       &kp CARET   &kp AMPS        &kp KP_MULTIPLY &trans      &kp DEL 
            &kp HASH    &kp QMARK   &kp FSLH    &kp COLON   &kp SEMI        &kp MINUS   &td_paren       &td_bracket     &td_brace   &kp BSPC
            &kp LSHFT   &kp PLUS    &kp EQUAL   &kp RBKT    &kp BSLH        &kp UNDER   &kp LEFT        &kp DOWN        &kp UP      &kp RIGHT
                                                &trans      &kp LCTRL       &kp SPACE   &trans
            >;
        };    
        
        tri_layer {
            bindings = <
            &kp F1      &kp F2      &kp F3      &kp F4      &kp INS         &trans      &kp C_BRI_INC   &kp K_VOL_UP    &trans      &trans
            &kp F5      &kp F6      &kp F7      &kp F8      &caps_word      &trans      &kp C_BRI_DEC   &kp K_VOL_DN    &trans      &kp ENTER 
            &kp F9      &kp F10     &kp F11     &kp F12     &kp CAPSLOCK    &trans      &kp C_BRI_AUTO  &kp K_MUTE      &trans      &trans   
                                                &trans      &trans          &trans      &trans 
            >;
        };
        
        nav_numpad_layer {
            bindings = <
            &bt BT_NXT  &kp HOME    &kp UP      &kp END     &kp PG_UP       &kp SLASH   &kp N7          &kp N8          &kp N9      &kp MINUS
            &bt BT_PRV  &kp LEFT    &kp DOWN    &kp RIGHT   &kp PG_DN       &kp STAR    &kp N4          &kp N5          &kp N6      &kp PLUS
            &bt BT_CLR  &trans      &trans      &trans      &trans          &kp DOT     &kp N1          &kp N2          &kp N3      &kp RET
                                                &to 0       &kp K_APP       &trans      &kp N0
            >;
        };

        kbd_control_layer {
            bindings = <
            &trans      &trans      &trans      &bt BT_NXT  &reset          &reset      &trans          &trans          &trans      &trans
            &trans      &trans      &trans      &bt BT_PRV  &bootloader     &bootloader &trans          &trans          &trans      &trans
            &trans      &trans      &trans      &bt BT_CLR  &trans          &trans      &trans          &trans          &trans      &trans
                                                &to 0       &trans          &trans      &trans
            >;
        };
    };

    chosen {
      zmk,battery = &vbatt;
    };

    vbatt: vbatt {
        compatible = "zmk,battery-nrf-vddh";
        label = "VBATT";
    };
};