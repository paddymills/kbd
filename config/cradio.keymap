/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define COLEMAK 0
#define QWERTY  1
#define EDITOR  2
#define SECOND  3
#define TRI     4
#define NUMNAV  5
#define KBDCTRL 6

&mt {
    tapping-term-ms = <500>;
};

/ {
    behaviors {
        td_paren: tap_dance_parenthesis {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_PARENTHESIS";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        td_bracket: tap_dance_bracket {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_BRACKET";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        td_brace: tap_dance_brace {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_BRACE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACE>, <&kp RIGHT_BRACE>;
        };

        td_sbkt: tap_dance_square_bracket {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_SQUARE_BRACKET";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LESS_THAN>, <&kp GREATER_THAN>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";
        
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        
        combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };
        
        combo_backspace {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp BACKSPACE>;
        };
        
        combo_qwerty {
            timeout-ms = <50>;
            key-positions = <30 33>;
            layers = <COLEMAK>;
            bindings = <&to QWERTY>;
        };
        
        combo_colemak {
            timeout-ms = <50>;
            key-positions = <30 33>;
            layers = <QWERTY>;
            bindings = <&to COLEMAK>;
        };
        
        layer_reset {
            timeout-ms = <50>;
            key-positions = <0 4 5 9>;
            bindings = <&to COLEMAK>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <EDITOR SECOND>;
            then-layer = <TRI>;
        };
    };

    keymap {
        // TODO: homerow mods on additional layers
        // TODO: mod to access control layer
        // TODO: windows, linux, iPadOs shortcut layers (enable layers and then use conditional layers for shortcut directing)
        // TODO: move SEMICOLON off of colemak/qwerty layers? maybe replace with ampersand?

        compatible = "zmk,keymap";
                
        colemak_dh {
            bindings = <
                &kp Q       &kp W       &kp F       &kp P       &kp B           &kp J       &kp L       &kp U       &kp Y       &kp SEMICOLON
                &hm LGUI A  &hm LALT R  &hm LCTRL S &hm LSHFT T &kp G           &kp M       &hm RSHFT N &hm RCTRL E &hm LALT I  &hm RGUI O
                &kp Z       &kp X       &kp C       &kp D       &kp V           &kp K       &kp H       &kp COMMA   &kp DOT     &kp RETURN
                                                    &mo EDITOR  &tog NUMNAV     &kp SPACE   &mo SECOND
            >;
        };
                
        qwerty {
            bindings = <
                &kp Q       &kp W       &kp E       &kp R       &kp T           &kp Y       &kp U       &kp I       &kp O       &kp P
                &hm LGUI A  &hm LALT S  &hm LCTRL D &hm LSHFT F &kp G           &kp H       &hm RSHFT J &hm RCTRL K &hm LALT L  &hm RGUI SEMICOLON
                &kp Z       &kp X       &kp C       &kp V       &kp B           &kp N       &kp M       &kp COMMA   &kp DOT     &kp RETURN
                                                    &trans      &trans          &trans      &trans
            >;
        };

        editor {
            bindings = <
                &kp ESC     &kp STAR    &kp AMP     &kp HASH    &none           &none       &none       &none       &kp DQT     &kp BACKSPACE
                &kp TAB     &kp LC(S)   &kp DQT     &kp LSHFT   &none           &kp UNDER   &td_paren   &td_bracket &td_brace   &td_sbkt
                &caps_word  &kp TILDE   &kp BSLH    &kp EXCL    &kp DEL         &kp MINUS   &kp GRAVE   &kp COLON   &kp SEMI    &kp SLASH
                                                    &trans      &trans          &trans      &trans
            >;
        };
        
        sec {
            bindings = <
                &kp EXCL    &kp AT      &kp HASH    &kp DLLR    &kp PRCNT       &kp CARET   &kp AMPS    &kp STAR    &kp PLUS    &kp BACKSPACE
                &kp HASH    &kp QMARK   &kp FSLH    &kp COLON   &kp SEMI        &kp MINUS   &kp LC(S)   &kp RCTRL   &kp LALT    &kp RGUI
                &kp LSHFT   &kp PLUS    &kp EQUAL   &kp RBKT    &kp BSLH        &kp UNDER   &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT
                                                    &trans      &trans          &trans      &trans
            >;
        };    
        
        tri {
            bindings = <
                &kp F1      &kp F2      &kp F3      &kp F4      &kp INS         &none       &kp C_BRI_INC   &kp K_VOL_UP    &kp C_NEXT       &none
                &kp F5      &kp F6      &kp F7      &kp F8      &caps_word      &none       &kp C_BRI_DEC   &kp K_VOL_DN    &kp C_PLAY_PAUSE &kp ENTER
                &kp F9      &kp F10     &kp F11     &kp F12     &kp CAPSLOCK    &none       &kp C_BRI_AUTO  &kp K_MUTE      &kp C_PREV       &none
                                                    &trans      &trans          &trans      &trans 
            >;
        };
        
        numnav {
            bindings = <
                &bt BT_NXT  &kp HOME    &kp UP      &kp END     &kp PG_UP       &kp SLASH   &kp N7          &kp N8          &kp N9      &kp MINUS
                &bt BT_PRV  &kp LEFT    &kp DOWN    &kp RIGHT   &kp PG_DN       &kp STAR    &kp N4          &kp N5          &kp N6      &kp PLUS
                &bt BT_CLR  &none       &none       &none       &kp K_APP       &kp DOT     &kp N1          &kp N2          &kp N3      &kp RET
                                                    &to 0       &tog NUMNAV     &trans      &kp N0
            >;
        };

        kbd_control_layer {
            bindings = <
                &none       &none       &none       &bt BT_NXT  &reset          &reset      &none           &none           &none       &none 
                &none       &none       &none       &bt BT_PRV  &bootloader     &bootloader &none           &none           &none       &none 
                &none       &none       &none       &bt BT_CLR  &none           &none       &none           &none           &none       &none 
                                                    &to 0       &trans          &trans      &trans
            >;
        };
    };

    chosen {
      zmk,battery = &vbatt;
    };

    vbatt: vbatt {
        compatible = "zmk,battery-nrf-vddh";
        label = "VBATT";
    };
};